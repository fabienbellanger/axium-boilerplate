version: '3.9'

services:
  mariadb:
    container_name: axum_boilerplate_mariadb
    image: mariadb:latest
    ports:
      - "3308:3306"
    volumes:
      - database:/var/lib/mysql:delegated
    environment:
      MYSQL_ROOT_PASSWORD: axum
      MYSQL_DATABASE: axum
      MYSQL_USER: axum
      MYSQL_PASSWORD: axum
    networks:
      - backend
    restart: "no"

  adminer:
    container_name: axum_boilerplate_adminer
    image: adminer:latest
    ports:
      - 8083:8080
    links:
      - mariadb:db
    networks:
      - backend
    restart: "no"

  maildev:
    container_name: axum_boilerplate_maildev
    image: djfarrelly/maildev
    ports:
        - "1081:80"
        - "1026:25"
    networks:
        - backend
    restart: "no"
  
  redis:
    container_name: axum_boilerplate_redis
    image: redis:latest
    ports:
      - "6380:6379"
    volumes:
      - redis:/var/lib/redis:delegated
    environment:
      REDIS_REPLICATION_MODE: master
    networks:
      - backend
    restart: "no"

  server:
    container_name: axum_boilerplate_server
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8087:8087"
    links:
      - mariadb
      - redis
    networks:
      - backend
    restart: "no"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./docker/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      # - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: "no"
    ports:
      - "9090:9090"
    # expose:
    #   - 9090
    networks:
      - monitoring
      - backend
    # labels:
    #   org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:latest
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      # - /:/rootfs:ro # Does not work on macOS
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: "no"
    ports:
      - "9100:9100"
    # expose:
    #   - 9100
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: "no"
    # expose:
    #   - 3003
    ports:
      - "3003:3000"
    networks:
      - monitoring
    # labels:
    #   org.label-schema.group: "monitoring"

networks:
  backend:
    driver: bridge
  monitoring:
    driver: bridge

volumes:
  database:
    name: axum_boilerplate_database
    external: false
  redis:
    name: axum_boilerplate_redis
    external: false
  prometheus_data:
    name: axum_boilerplate_prometheus
    external: false
  grafana_data:
    name: axum_boilerplate_grafana
    external: false
